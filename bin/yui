#!/usr/bin/env php
<?php

// Path to your package's directory
$packagePath = __DIR__ . '/../';

// Check if the vendor directory already exists
if (!is_dir($packagePath . 'vendor')) {
    // Change the working directory to the package's directory where composer.json is located
    if (!chdir($packagePath)) {
        echo "Failed to change directory to: $packagePath\n";
        exit(1);
    }

    // If vendor doesn't exist, run composer install
    echo "Dependencies not found. Running composer install...\n";
    passthru('composer install', $return_var);

    // Check if composer install was successful
    if ($return_var !== 0) {
        echo "Failed to install dependencies. Please run 'composer install' manually.\n";
        exit(1);
    }
}

require __DIR__ . '/../vendor/autoload.php';

use Symfony\Component\Console\Application;
use CustomLaravelInstaller\InstallCommand;
use CustomLaravelInstaller\VersionCommand;
use Symfony\Component\Console\Output\ConsoleOutput;

class CustomApplication extends Application
{
    protected function doRunCommand(\Symfony\Component\Console\Command\Command $command, \Symfony\Component\Console\Input\InputInterface $input, \Symfony\Component\Console\Output\OutputInterface $output): int
    {
        return parent::doRunCommand($command, $input, $output);
    }
}

$composerJson = json_decode(file_get_contents(__DIR__ . '/../composer.json'), true);
$version = $composerJson['version'] ?? 'unknown';

$app = new CustomApplication();
$output = new ConsoleOutput();
$output->writeln(PHP_EOL . '  <fg=blue>__     __  _    _   _____
  \ \   / / | |  | | |_   _|
   \ \_/ /  | |  | |   | |
    \   /   | |  | |   | |
     | |    | |__| |  _| |_
     |_|     \____/  |_____|</>' . PHP_EOL . PHP_EOL);

$output->writeln(PHP_EOL . '<fg=blue>Yui Installer version: ' . $version . '</>' . PHP_EOL . PHP_EOL);


$app->add(new InstallCommand());
$app->add(new VersionCommand());


$app->run();
